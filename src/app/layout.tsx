import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import { css } from '../../styled-system/css';
import { SiteFooter } from '../features/site/components/site-footer';
import { SiteHeader } from '../features/site/components/site-header';
import { SiteTheme } from '../features/site-theme/models';

import './globals.css';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html
      data-theme={SiteTheme.schema.enum.system}
      lang="en"
      suppressHydrationWarning
    >
      <head>
        <script
          // biome-ignore lint/security/noDangerouslySetInnerHtml: due to necessary inline script for theme setting
          dangerouslySetInnerHTML={{
            __html:
              '(()=>{const e=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light",t=localStorage.getItem("site-theme"),o="system"===t||null===t?e:t;window.document.documentElement.dataset.theme=o,window.document.documentElement.style.setProperty("--color-mix-ratio","light"===o?"7%":"12%")})();',
          }}
        />
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable} ${style}`}>
        <SiteHeader />
        <main>{children}</main>
        <SiteFooter />
      </body>
    </html>
  );
}

const style = css({
  display: 'grid',
  gridTemplateRows: 'auto 1fr auto',
  minHeight: '100dvh',
  backgroundColor: 'base',
});
